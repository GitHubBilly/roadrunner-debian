#!/usr/bin/env bash
#
# @(#) ethernet-gateway
#
# Copyright Â© 2020, Revolution Robotics, Inc.
#
# This script creates and activates a NetworkManger gateway profile.
#
script_name=${0##*/}
script_dir=${0%/*}

: ${CAT:='/bin/cat'}

source "${script_dir}/ip-funcs"
source "${script_dir}/nm-funcs"

usage ()
{
    $CAT <<EOF
Usage: $script_name -p PROFILE -i INTERFACE OPTIONS
where OPTIONS are:
  -h|--help      Display help, then exit
  -p|--profile=PROFILE
                 Set connection profile name to PROFILE (e.g., eth0-gw)
  -i|--interface=INTERFACE
                 Set network interface to INTERFACE (e.g., eth0)
  -a|--address=IPv4_ADDR
                 Set IPv4 address/netmask of interface to IPv4_ADDR (optional)
                 (e.g., 10.100.0.25/24)
  -g|--gateway=IPv4_GATEWAY
                 Set IPv4 address of gateway to IPv4_GATEWAY (optional)
                 (e.g., 10.100.0.1)
EOF
}

declare profile
declare interface
declare ipv4_addr
declare ipv4_gateway

declare opts
declare status
declare -r short_opts=a:,g:,h,i:,p:
declare -r long_opts=address:,gateway:,help,interface:,profile:

opts=$(
    getopt --name "$script_name" --options "$short_opts"  \
           --longoptions "$long_opts" -- "$@"
    )

status=$?
if (( status != 0 )); then
    exit 1
fi

eval set -- "$opts"

while true; do
    case "$1" in
        -a|--address)
            ipv4_addr=$2
            ;;
        -g|--gateway)
            ipv4_gateway=$2
            ;;
        -h|--help)
            usage
            exit 0
            ;;
        -i|--interface)
            interface=$2
            ;;
        -p|--profile)
            profile=$2
            ;;
        --)
            break
            ;;
    esac
    shift 2
done

if test ."$profile" = .''; then
    echo "$script_name: $profile: Not a valid profile name" >&2
    exit 1
fi

validate_interface "$interface" || exit $?

if test ."$ipv4_addr" != .''; then
    validate_ipv4_address "$ipv4_addr" || exit $?
fi

if test ."$ipv4_gateway" != .''; then
    validate_ipv4_gateway "$ipv4_gateway" || exit $?
fi

disconnect_interface "$interface"
remove_previous_profile "$profile"
create_ethernet_profile gw "$profile" "$interface" "$ipv4_addr" "$ipv4_gateway"
activate_profile "$profile"
